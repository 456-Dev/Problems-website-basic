name: Build & deploy to GitHub Pages
on:
  push:
    branches: [main]

permissions:
  contents: read      # to checkout the code
  pages: write        # to deploy the site
  id-token: write     # to verify the deployment

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ① Pull the source branch
      - uses: actions/checkout@v4

      # ② (Optional) build step — uncomment if you run a bundler
      #    After build, the public files usually sit in ./dist
      # - run: npm ci && npm run build
      #   env:
      #     VITE_FIREBASE_API_KEY:      ${{ secrets.FIREBASE_API_KEY }}
      #     VITE_FIREBASE_AUTH_DOMAIN:  ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      #     VITE_FIREBASE_PROJECT_ID:   ${{ secrets.FIREBASE_PROJECT_ID }}

      # ③ Swap placeholders for real Firebase secrets
      - name: Substitute Firebase placeholders
        run: |
          # CHANGE this if you build into dist/ or another folder
          TARGET="."           # use TARGET="dist" if step ② is enabled

          # Replace in every *.html and *.js file
          find "$TARGET" -type f \( -name '*.html' -o -name '*.js' \) -print0 |
          xargs -0 sed -i \
            -e 's#__FIREBASE_API_KEY__#${{ secrets.FIREBASE_API_KEY }}#g' \
            -e 's#__FIREBASE_AUTH_DOMAIN__#${{ secrets.FIREBASE_AUTH_DOMAIN }}#g' \
            -e 's#__FIREBASE_PROJECT_ID__#${{ secrets.FIREBASE_PROJECT_ID }}#g'

      # ④ **Fail the build if any placeholder survived** (safety catch)
      - name: Verify all placeholders were replaced
        run: |
          TARGET="."           # keep in sync with step ③
          if grep -R --line-number '__FIREBASE_API_KEY__' "$TARGET"; then
            echo '❌ Placeholder still present – build aborted' >&2
            exit 1
          fi

      # ⑤ (Optional) peek at a file while debugging — safe to delete later
      # - name: Spot‑check first 12 lines of an admin file
      #   run: head -n 12 ./admin/your‑file.html

      # ⑥ Upload the ready‑to‑serve site as the Pages artifact
      - uses: actions/upload-pages-artifact@v3
        with:
          path: .              # change to dist if step ② is enabled

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
